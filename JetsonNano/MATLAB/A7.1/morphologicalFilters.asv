function[segmentationMask] = morphologicalFilters(colourSegmentationMask, centerOfObjectX, centerOfObjectY)

%The function takes in a binary image where the colours have been segmentated 
%and a rough postion of the object in the image that should be segmented. 
%and it outputs a a bitmask of the the object.

%Input:
%colourBalancedImage = Binary map 984x740
%centerOfObjectX = Objects center postion in the x-axis
%centerOfObjectY = Objects center postion in the y-axis

%Output:
%SegmentationMask = Binary map 984x740 of the object

%Fill up the hole in the binary image.
maskFill =imfill(colourSegmentationMask,'holes');


%
stats = regionprops(maskFill,'Area','Centroid','PixelIdxList');

area = [stats.Area]';

[numRegions,~] = size(area);

centroid = reshape([stats.Centroid],[2,numRegions])';

centroid = centroid .* (area > 250);
centroid(centroid == 0) = NaN;

distances = sqrt(sum(bsxfun(@minus, centroid, [centerOfObjectY,centerOfObjectX]).^2,2));

[~, index] = min(distances);

segmentationMask = zeros(size(colourSegmentationMask),'logical');

segmentationMask(stats(index).PixelIdxList) = 1;


end